{{#> layout }}
  <div class="container mt-4 mb-4">
    <h1>Slider Component For Comparing Two Images</h1>

    <p>
      Installation and usage instructions are available on
      <a href="https://github.com/sneas/img-comparison-slider">GitHub</a>.
    </p>

    <p>
      <a
              class="github-button"
              href="https://github.com/sneas/img-comparison-slider"
              data-size="large"
              aria-label="Star sneas/img-comparison-slider on GitHub"
      >img-comparison-slider</a
      >
    </p>

    <h2>Usage Examples</h2>

    <p>
      All images in the examples are given <code>width="100%"</code> property
      to make them responsive.
    </p>

    <div class="row">
      <div class="col-12 col-sm-4 col-md-3 mb-4">
        <nav class="position-sticky" style="top: 5rem">
          <a class="d-block mb-2" href="#default">Default settings</a>
          <a class="d-block mb-2" href="#always-show"
          >Make handle larger and disappear on focus</a
          >
          <a class="d-block mb-2" href="#shadows">Shadows</a>
          <a class="d-block mb-2" href="#colors">Divider and handle color</a>
          <a class="d-block mb-2" href="#relative-size"
          >Relative size handle</a
          >
          <a class="d-block mb-2" href="#focus"
          >Change element :focus styles</a
          >
          <a class="d-block mb-2" href="#custom-handle">Custom handle</a>
          <a class="d-block mb-2" href="#custom-handle-with-animation"
          >Custom handle with hover animation</a
          >
          <a class="d-block" href="#width"
          >No handle and change spilt line width</a
          >

          <a class="d-block" href="#before-and-after-labels"
          >Before and after labels</a
          >

          <a class="d-block" href="#position">Divider position</a>
        </nav>
      </div>
      <div class="col-12 col-sm-8 col-md-9 bg-white">
        <h3 id="default">Default settings</h3>
        <!-- htmlmin:ignore -->
        <x-ray>
          <code>
            <img-comparison-slider>
              <img
                      slot="first"
                      width="100%"
                      src="images/green-leaves.webp"
              />
              <img
                      slot="second"
                      width="100%"
                      src="images/green-leaves-blurred.webp"
              />
            </img-comparison-slider>
          </code>
        </x-ray>
        <!-- htmlmin:ignore -->

        <h3 id="always-show">Make handle larger and disappear on focus</h3>
        <p>
          On CSS level, the component supports standard pseudo selectors, such
          as
          <code>:focus</code> and <code>:hover</code>. This could be taken
          into advantage when tuning the component's behavior.
        </p>
        <!-- htmlmin:ignore -->
        <x-ray>
          <code>
            <style>
              .slider-example-opacity-and-size {
                --default-handle-width: 100px;
              }

              .slider-example-opacity-and-size:focus {
                --default-handle-opacity: 0;
              }
            </style>
            <img-comparison-slider class="slider-example-opacity-and-size">
              <img
                      slot="first"
                      width="100%"
                      src="images/ferns.webp"
              />
              <img
                      slot="second"
                      width="100%"
                      src="images/ferns-blurred.webp"
              />
            </img-comparison-slider>
          </code>
        </x-ray>
        <!-- htmlmin:ignore -->

        <h3 id="shadows">Shadows</h3>
        <p>
          Some shadows can be used in order to give divider and arrows more
          contrast on bright background.
        </p>
        <p>
          Beware: shadows negatively affect component's rendering performance.
        </p>

        <!-- htmlmin:ignore -->
        <x-ray>
          <code>
            <style>
              .slider-with-shadows {
                --default-handle-shadow: 0px 0px 5px rgba(0, 0, 0, 1);
                --divider-shadow: 0px 0px 5px rgba(0, 0, 0, 0.5);
              }
            </style>
            <img-comparison-slider class="slider-with-shadows">
              <img
                      slot="first"
                      width="100%"
                      src="images/high-contrast.webp"
              />
              <img
                      slot="second"
                      width="100%"
                      src="images/high-contrast-blurred.webp"
              />
            </img-comparison-slider>
          </code>
        </x-ray>
        <!-- htmlmin:ignore -->

        <h3 id="colors">Divider and handle color</h3>

        <!-- htmlmin:ignore -->
        <x-ray>
          <code>
            <style>
              .coloured-slider {
                --divider-color: rgba(0, 0, 0, 0.5);
                --default-handle-color: rgba(0, 0, 0, 0.5);
              }
            </style>
            <img-comparison-slider class="coloured-slider">
              <img
                      slot="first"
                      width="100%"
                      src="images/pink.webp"
              />
              <img
                      slot="second"
                      width="100%"
                      src="images/pink-blurred.webp"
              />
            </img-comparison-slider>
          </code>
        </x-ray>
        <!-- htmlmin:ignore -->

        <h3 id="relative-size">Relative size handle</h3>
        <p>Resize the window to see it in action.</p>
        <!-- htmlmin:ignore -->
        <x-ray>
          <code>
            <style>
              .slider-example-relative-size {
                --default-handle-width: clamp(40px, 10vw, 200px);
              }
            </style>
            <img-comparison-slider class="slider-example-relative-size">
              <img
                      slot="first"
                      width="100%"
                      src="images/monstera.webp"
              />
              <img
                      slot="second"
                      width="100%"
                      src="images/monstera-blurred.webp"
              />
            </img-comparison-slider>
          </code>
        </x-ray>
        <!-- htmlmin:ignore -->

        <h3 id="focus">Change element :focus styles</h3>
        <!-- htmlmin:ignore -->
        <x-ray>
          <code>
            <style>
              .slider-example-focus {
                /*
                  The style below isn't necessary.
                  It has been added for the sake of smoothness.
                */
                transition: box-shadow 200ms ease-in-out;
              }

              .slider-example-focus:focus {
                outline: none;
                box-shadow: 0px 0px 15px 5px #0c5d10;
              }
            </style>
            <img-comparison-slider class="slider-example-focus">
              <img
                      slot="first"
                      width="100%"
                      src="images/mint.webp"
              />
              <img
                      slot="second"
                      width="100%"
                      src="images/mint-blurred.webp"
              />
            </img-comparison-slider>
          </code>
        </x-ray>
        <!-- htmlmin:ignore -->

        <h3 id="custom-handle">Custom handle</h3>
        <p>
          Add <code>slot="handle"</code> attribute to any tag inside
          <code>&lt;img-comparison-slider&gt;</code> and it will become a
          handle. In this example we use <code>&lt;svg&gt;</code>.
        </p>
        <!-- htmlmin:ignore -->
        <x-ray>
          <code>
            <img-comparison-slider>
              <img
                      slot="first"
                      width="100%"
                      src="images/leaves.webp"
              />
              <img
                      slot="second"
                      width="100%"
                      src="images/leaves-blurred.webp"
              />
              <svg
                      slot="handle"
                      xmlns="http://www.w3.org/2000/svg"
                      width="100"
                      viewBox="-8 -3 16 6"
              >
                <path
                        stroke="#fff"
                        d="M -5 -2 L -7 0 L -5 2 M -5 -2 L -5 2 M 5 -2 L 7 0 L 5 2 M 5 -2 L 5 2"
                        stroke-width="1"
                        fill="#fff"
                        vector-effect="non-scaling-stroke"
                />
              </svg>
            </img-comparison-slider>
          </code>
        </x-ray>
        <!-- htmlmin:ignore -->

        <h3 id="custom-handle-with-animation">
          Custom handle with hover animation
        </h3>

        <p>
          The combination of component's <code>:hover</code> and
          <code>:focus</code> pseudo-classes, CSS, and arbitrary HTML for a
          handle provides plenty of opportunities for the component styling.
        </p>

        <!-- htmlmin:ignore -->
        <x-ray>
          <code>
            <style>
              .custom-animated-handle {
                transition: transform 0.2s;
              }

              .slider-with-animated-handle:hover .custom-animated-handle {
                transform: scale(1.2);
              }
            </style>
            <img-comparison-slider class="slider-with-animated-handle">
              <img
                      slot="first"
                      width="100%"
                      src="images/bright-leaves.webp"
              />
              <img
                      slot="second"
                      width="100%"
                      src="images/bright-leaves-blurred.webp"
              />
              <svg
                      slot="handle"
                      class="custom-animated-handle"
                      xmlns="http://www.w3.org/2000/svg"
                      width="100"
                      viewBox="-8 -3 16 6"
              >
                <path
                        stroke="#fff"
                        d="M -5 -2 L -7 0 L -5 2 M -5 -2 L -5 2 M 5 -2 L 7 0 L 5 2 M 5 -2 L 5 2"
                        stroke-width="1"
                        fill="#fff"
                        vector-effect="non-scaling-stroke"
                />
              </svg>
            </img-comparison-slider>
          </code>
        </x-ray>
        <!-- htmlmin:ignore -->

        <h3 id="width">No handle and change spilt line width</h3>
        <!-- htmlmin:ignore -->
        <x-ray>
          <code>
            <style>
              .slider-example-split-line {
                --divider-width: 4px;
                --divider-color: #ffa658;
                --default-handle-opacity: 0;
              }
            </style>
            <img-comparison-slider class="slider-example-split-line">
              <img
                      slot="first"
                      width="100%"
                      src="images/maple.webp"
              />
              <img
                      slot="second"
                      width="100%"
                      src="images/maple-blurred.webp"
              />
            </img-comparison-slider>
          </code>
        </x-ray>
        <!-- htmlmin:ignore -->

        <h3 id="before-and-after-labels">Before and after labels</h3>
        <p>
          Slots <code>first</code> and <code>second</code> should not
          necessarily be of <code>&lt;img&gt;</code> tag. They could be of
          arbitrary HTML. Let's use it to our advantage and create
          good-looking semantic-friendly labels.
        </p>
        <!-- htmlmin:ignore -->
        <x-ray>
          <code>
            <style>
              .before,
              .after {
                margin: 0;
              }

              .before figcaption,
              .after figcaption {
                background: #fff;
                border: 1px solid #c0c0c0;
                border-radius: 12px;
                color: #2e3452;
                opacity: 0.8;
                padding: 12px;
                position: absolute;
                top: 50%;
                transform: translateY(-50%);
                line-height: 100%;
              }

              .before figcaption {
                left: 12px;
              }

              .after figcaption {
                right: 12px;
              }
            </style>
            <img-comparison-slider>
              <figure slot="first" class="before">
                <img width="100%" src="images/basil.webp"/>
                <figcaption>Before</figcaption>
              </figure>
              <figure slot="second" class="after">
                <img
                        width="100%"
                        src="images/basil-blurred.webp"
                />
                <figcaption>After</figcaption>
              </figure>
            </img-comparison-slider>
          </code>
        </x-ray>
        <!-- htmlmin:ignore -->

        <h3 id="position">Divider position</h3>

        <p>
          The divider position could be specified in percents with the help of
          <code>value</code> property.
        </p>

        <!-- htmlmin:ignore -->
        <x-ray>
          <code>
            <img-comparison-slider value="75">
              <img
                      slot="first"
                      width="100%"
                      src="images/plant.webp"
              />
              <img
                      slot="second"
                      width="100%"
                      src="images/plant-blurred.webp"
              />
            </img-comparison-slider>
          </code>
        </x-ray>
        <!-- htmlmin:ignore -->
      </div>
    </div>
  </div>
{{/layout}}
