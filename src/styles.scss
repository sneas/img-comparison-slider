:host {
  --divider-width: 1px;
  --divider-color: #fff;
  --divider-shadow: none;
  --default-handle-width: 50px;
  --default-handle-color: #fff;
  --default-handle-opacity: 1;
  --default-handle-shadow: none;

  position: relative;
  display: inline-block;
  overflow: hidden;
  line-height: 0;

  // ToDo: remove this style and fix rtl behaviour
  direction: ltr;

  // ToDo: Remove this Chrome-specific hack which is fixing :focus outline
  @media screen and (-webkit-min-device-pixel-ratio: 0) and (min-resolution: 0.001dpcm) {
    & {
      outline-offset: 1px;
    }
  }
}

::slotted(*) {
  -webkit-user-drag: none;
  -khtml-user-drag: none;
  -moz-user-drag: none;
  -o-user-drag: none;
  user-drag: none;

  -webkit-touch-callout: none;
  -webkit-user-select: none;
  -khtml-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

.first {
  position: absolute;
  left: 0;
  top: 0;
  line-height: normal;
  font-size: 100%;
  max-height: 100%;
  height: 100%;
  width: 100%;

  --exposure: 50%;
  --transition-time: 0ms;

  transform: translateX(calc(var(--exposure) * -1));
  transition: transform var(--transition-time);

  .first-overlay-container {
    position: relative;
    transform: translateX(var(--exposure));
    transition: transform var(--transition-time);
    height: 100%;
  }

  .first-overlay {
    overflow: hidden;
    height: 100%;
  }

  &.focused {
    will-change: transform;

    .first-overlay-container {
      will-change: transform;
    }
  }

  // Ignore Safari browser
  @media not all and (min-resolution: 0.001dpcm) {
    @supports (-webkit-appearance: none) {
      &.focused {
        will-change: auto;

        .first-overlay-container {
          will-change: auto;
        }
      }
    }
  }
}

.second {
  position: relative;
}

.handle-container {
  transform: translateX(50%);
  position: absolute;
  top: 0;
  right: 0;
  height: 100%;
  display: flex;
  align-items: flex-end;
  justify-content: center;
  flex-direction: column;
}

.divider {
  position: absolute;
  height: 100%;
  width: 100%;
  left: 0;
  top: 0;
  display: flex;
  align-items: center;
  justify-content: center;
  flex-direction: column;

  &:after {
    content: ' ';
    display: block;
    height: 100%;
    border-left-width: var(--divider-width);
    border-left-style: solid;
    border-left-color: var(--divider-color);
    box-shadow: var(--divider-shadow);
  }
}

.handle {
  pointer-events: none;
  box-sizing: border-box;
  margin-left: 1px;
  transform: translateX(-0.5px);
}

.default-handle {
  width: var(--default-handle-width);
  opacity: var(--default-handle-opacity);
  transition: all 1s;
  filter: drop-shadow(var(--default-handle-shadow));
  path {
    stroke: var(--default-handle-color);
  }
}

:host([direction="vertical"]) .first {
  transform: translateY(calc(var(--exposure) * -1));

  .first-overlay-container {
    transform: translateY(var(--exposure));
  }

  .handle-container {
    transform: translateY(50%);
    height: auto;
    top: unset;
    bottom: 0;
    width: 100%;
    left: 0;
    flex-direction: row;
  }

  .divider {
    &:after {
      height: 1px;
      width: 100%;
      border-top-width: var(--divider-width);
      border-top-style: solid;
      border-top-color: var(--divider-color);
      border-left: 0;
    }
  }

  .handle {
    transform: translateX(-0.5px) rotate(90deg);
  }
}
